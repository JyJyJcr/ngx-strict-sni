name: test & release
on:
  push:
    branches: main

jobs:
  compile:
    name: ${{ matrix.mode.tr }} on ${{matrix.target.name}}
    runs-on: ${{ matrix.target.host }}
    strategy:
      matrix:
        mode:
          - tr: ${{ startsWith(github.ref,'refs/tags/v') && 'release' || 'test' }}
            dr: ${{ startsWith(github.ref,'refs/tags/v') && 'release' || 'debug' }}
            bool: ${{ startsWith(github.ref,'refs/tags/v') }}
        target:
          - name: osx_arm64
            triple: aarch64-apple-darwin
            ngx: 1.25.4
            host: macos-14
            docker: false
          - name: osx_amd64
            triple: x86_64-apple-darwin
            ngx: 1.25.4
            host: macos-13
            docker: false
          - name: debian12_arm64
            triple: aarch64-unknown-linux-gnu
            ngx: 1.22.1
            host: ubuntu-latest
            docker: true
          - name: debian12_amd64
            triple: x86_64-unknown-linux-gnu
            ngx: 1.22.1
            host: ubuntu-latest
            docker: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.cache/src
            ${{ github.workspace }}/.nginx
            ${{ github.workspace }}/target
          key: src+${{matrix.target.name}}+${{matrix.target.ngx}}
      - name: prepare docker
        uses: docker/setup-qemu-action@v3
        if: ${{matrix.target.docker}}
      - name: run in docker
        run: |
          docker build ./cicd/target/${{matrix.target.name}} -t "runner:latest"
          docker run \
          --rm -i -v $PWD:/repo runner:latest bash <<'EOF'
          set -xeu
          cd /repo
          cicd/maker.sh ${{matrix.target.name}} ${{matrix.target.ngx}} ${{matrix.target.triple}} ${{ matrix.mode.tr }}
          EOF
          sudo chown -R "$(id -u $USER):$(id -g $USER)" .
        if: ${{matrix.target.docker}}
      - name: run in real
        run: |
          cicd/maker.sh ${{matrix.target.name}} ${{matrix.target.ngx}} ${{matrix.target.triple}} ${{ matrix.mode.tr }}
        if: ${{!matrix.target.docker}}
      - name: raw upload
        uses: actions/upload-artifact@v4
        with:
          name: raw+${{ matrix.target.name }}
          path: |
            target/${{matrix.target.triple}}/${{matrix.mode.dr}}/*.so
            target/${{matrix.target.triple}}/${{matrix.mode.dr}}/*.dylib
      - name: deb upload
        uses: actions/upload-artifact@v4
        with:
          name: deb+${{ matrix.target.name }}
          path: target/debian/*.deb
        if: matrix.mode.bool && startsWith(matrix.target.name,'debian')
  publish:
    name: publish binary and package
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: publish
      - name: debian
        run: ls -la
