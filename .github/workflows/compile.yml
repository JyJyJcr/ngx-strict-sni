name: test & release
on:
  push:
    branches: main
    tags:
      - v*
      - p*

jobs:
  build:
    name: ${{ matrix.const.as_r && ( matrix.const.is_r && 'release' || 'prerelease') || 'test' }} build on ${{matrix.target.name}}
    runs-on: ${{ matrix.target.host }}
    strategy:
      matrix:
        const:
          - mode: ${{ (startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p')) && 'release' || 'test' }}
            as_r: ${{ startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p') }}
            is_r: ${{ startsWith(github.ref,'refs/tags/v') }}
        target:
          - name: osx_arm64
            triple: aarch64-apple-darwin
            ngx: 1.25.4
            host: macos-14
            docker: false
          - name: osx_amd64
            triple: x86_64-apple-darwin
            ngx: 1.25.4
            host: macos-13
            docker: false
          - name: debian11_arm64
            triple: aarch64-unknown-linux-gnu
            ngx: 1.18.0
            host: ubuntu-latest
            docker: true
          - name: debian11_amd64
            triple: x86_64-unknown-linux-gnu
            ngx: 1.18.0
            host: ubuntu-latest
            docker: true
          - name: debian12_arm64
            triple: aarch64-unknown-linux-gnu
            ngx: 1.22.1
            host: ubuntu-latest
            docker: true
          - name: debian12_amd64
            triple: x86_64-unknown-linux-gnu
            ngx: 1.22.1
            host: ubuntu-latest
            docker: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.cache/src
            ${{ github.workspace }}/.nginx
            ${{ github.workspace }}/target
          key: src+${{matrix.target.name}}+${{matrix.target.ngx}}+${{github.run_id}}
          restore-keys: src+${{matrix.target.name}}+${{matrix.target.ngx}}+
      - name: prepare docker on qemu
        uses: docker/setup-qemu-action@v3
        if: ${{matrix.target.docker}}
      - name: restore docker image if exist
        id: restore-docker-image
        uses: actions/cache@v4
        with:
          path: .docker
          key: docker+${{matrix.target.name}}+${{matrix.target.ngx}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+${{ github.run_id }}
          restore-keys: docker+${{matrix.target.name}}+${{matrix.target.ngx}}+${{ hashFiles(format('cicd/target/{0}/Dockerfile', matrix.target.name)) }}+
        if: matrix.target.docker
      - name: load docker image
        run: docker load --input .docker/runner.tar
        if: matrix.target.docker && steps.restore-docker-image.outputs.cache-hit
      - name: build and save docker image if not exist
        run: |
          docker build ./cicd/target/${{matrix.target.name}} -t "runner:latest"
          mkdir -p .docker
          docker save --output .docker/runner.tar "runner:latest"
        if: matrix.target.docker && (! steps.restore-docker-image.outputs.cache-hit)
      - name: run in docker
        run: |
          docker run \
          --rm -i -v $PWD:/repo runner:latest bash <<'EOF'
          set -xeu
          cd /repo
          cicd/maker.sh ${{matrix.target.name}} ${{matrix.target.ngx}} ${{matrix.target.triple}} ${{ matrix.const.as_r && 'release'|| 'test' }}
          EOF
          sudo chown -R "$(id -u $USER):$(id -g $USER)" .
        if: ${{matrix.target.docker}}
      - name: run in real
        run: |
          cicd/maker.sh ${{matrix.target.name}} ${{matrix.target.ngx}} ${{matrix.target.triple}} ${{ matrix.const.as_r && 'release'|| 'test' }}
        if: ${{!matrix.target.docker}}
      - name: raw upload
        uses: actions/upload-artifact@v4
        with:
          name: raw+${{ matrix.target.name }}
          path: |
            target/${{matrix.target.triple}}/release/*.so
            target/${{matrix.target.triple}}/release/*.dylib
      - name: deb upload
        uses: actions/upload-artifact@v4
        with:
          name: deb+${{ matrix.target.name }}
          path: |
            target/${{matrix.target.triple}}/debian/*.deb
            target/${{matrix.target.triple}}/debian/*.deb.codename
        if: matrix.const.as_r && startsWith(matrix.target.name,'debian')
  publish:
    name: publish binary and package
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: publish
    permissions:
      contents: write
      actions: write
    if: startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p')
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ startsWith(github.ref,'refs/tags/v') && 'publish' || 'prepublish' }}
          fetch-depth: 0
      - name: set gitconfig
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: reset publish to tagged commit
        run: |
          # git branch main ${{github.ref_name}}
          # git merge ${{github.ref_name}} -m "ci: catch up to ${{github.ref_name}}"
          git reset --hard ${{github.ref_name}}
      - name: (deb) install reprepro and dpkg-sig
        run: |
          sudo apt-get -y install reprepro dpkg-sig
      - name: (apt) import gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.DEB_GPG_SECRET_KEY }}
      - name: (deb) download .deb
        uses: actions/download-artifact@v4
        with:
          pattern: deb+*
          merge-multiple: true
          path: ./
      - name: (deb) create repository
        run: |
          cd publish/apt
          rm -rf dists
          rm -rf pool
          for deb in $(ls ../../ |grep -E '\.deb$');do
            # dpkg-sig -k 3C288CF6F3917DC32ED8605655C5F6BAACEEA951 --sign builder "../../$deb"
            reprepro includedeb "$(cat ../../$deb.codename)" "../../$deb"
          done
          reprepro export
          rm -rf db
          cd -
      - name: (deb) commit changee
        run: |
          git add ./publish/apt/
          git commit -m "ci: generate/update debian repository"
      - name: push
        run: git push -f
