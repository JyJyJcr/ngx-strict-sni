name: compile action test

on: push

jobs:
  compile:
    name: "compile test"
    strategy:
      fail-fast: false
      matrix:
        platform:
          - target: "aarch64-unknown-linux-gnu"
            host: "macOS-14"
            virt: true
          - target: "x86_64-unknown-linux-gnu"
            host: "ubuntu-latest"
            virt: false
          - target: "aarch64-apple-darwin"
            host: "macOS-14"
            virt: false
          - target: "x86_64-apple-darwin"
            host: "macOS-13"
            virt: false
        #version: ["1.18.0","1.22.1","1.24.0"]
        version: ["1.22.1"]
    runs-on: ${{ matrix.platform.host }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: build in virt
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu_latest
          dockerRunArgs: |
            --volume "${PWD}:/repo" --platform linux/arm64
          install: |
            apt-get update -q -y
            apt-get install -q -y curl
            apt-get install -q -y build-essential
          run: |
            cd /repo
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            export PATH="${HOME}/.cargo/bin:$PATH"
            rustup target install ${{ matrix.platform.target }}
            NGX_VERSION=${{ matrix.version }} cargo build --target ${{ matrix.platform.target }}
        if: ${{matrix.platform.virt}}
      - name: build in real
        run: |
          rustup target install ${{ matrix.platform.target }}
          NGX_VERSION=${{ matrix.version }} cargo build --target ${{ matrix.platform.target }}
        if: ${{!matrix.platform.virt}}
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ matrix.platform.target }}
          path: "target/${{ matrix.platform.target }}/debug/*ngx_http_ssl_strict_sni.*"
